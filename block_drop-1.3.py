import pygameimport sysimport randomimport timefrom pygame.locals import *pygame.init()gray = (150,150,150)green = (0,225,0)red = (255,0,0)game = (550, 550)count = 0key_on = 0player_y = 300player_x = 250player_size = 25enemy_size = 30boss_size = (60, 30)enemy_x1 = 250enemy_x2 = 200enemy_x3 = 150enemy_x4 = 300enemy_x5 = 350enemy_x6 = 100enemy_x7 = 400enemy_x8 = 450enemy_x9 = 400enemy_x10 = 400enemy_x11 = 400enemy_x12 = 400enemy_y = 0pps = 1.5block_sp = 0.001screen = pygame.display.set_mode((game[0],game[1]))def text(t,x,y,s): pygame.display.set_caption('Show Text') font = pygame.font.Font('freesansbold.ttf', s) text = font.render(t, True, gray) textRect = text.get_rect() textRect.center = (x, y) screen.blit(text, textRect)def rect(x,y,h,w,c): pygame.draw.rect(screen, c, (x,y,h,w))def player(): rect(player_x,player_y,player_size,player_size,green)def enemy1(x): rect(x,enemy_y,enemy_size,enemy_size,red) time.sleep(block_sp)def boss1(): rect(enemy_x10,enemy_y,boss_size[0],boss_size[1],red) time.sleep(block_sp)def boss2(): rect(enemy_x11,enemy_y,boss_size[0],boss_size[1],red) time.sleep(block_sp)def boss3(): rect(enemy_x12,enemy_y,boss_size[0],boss_size[1],red) time.sleep(block_sp)def mouse1(x,y,h,w): if event.type == pygame.MOUSEBUTTONDOWN:  mouse_pos = pygame.mouse.get_pos()  rect_pos = pygame.Rect(x,y,h,w)  if rect_pos.collidepoint(mouse_pos):   sys.exit()def detect(): p_x = player_x p_y = player_y e_x = enemy_x1 e_x2 = enemy_x2 e_x3 = enemy_x3 e_x4 = enemy_x4 e_x5 = enemy_x5 e_x6 = enemy_x6 e_x7 = enemy_x7 e_x8 = enemy_x8 e_x9 = enemy_x9 e_x10 = enemy_x10 e_x11 = enemy_x11 e_x12 = enemy_x12 e_y = enemy_y if (e_x >= p_x and e_x < (p_x + player_size)) or (p_x >= e_x and p_x < (e_x+enemy_size)):  if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):   end() if (e_x2 >= p_x and e_x2 < (p_x + player_size)) or (p_x >= e_x2 and p_x < (e_x2+enemy_size)):  if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):   end() if (e_x3 >= p_x and e_x3 < (p_x + player_size)) or (p_x >= e_x3 and p_x < (e_x3+enemy_size)):  if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):   end() if (e_x4 >= p_x and e_x4 < (p_x + player_size)) or (p_x >= e_x4 and p_x < (e_x4+enemy_size)):  if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):   end() if (e_x5 >= p_x and e_x5 < (p_x + player_size)) or (p_x >= e_x5 and p_x < (e_x5+enemy_size)):  if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):   end() if count > 10:  if (e_x6 >= p_x and e_x6 < (p_x + player_size)) or (p_x >= e_x6 and p_x < (e_x6+enemy_size)):   if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):     end() if count > 15:  if (e_x7 >= p_x and e_x7 < (p_x + player_size)) or (p_x >= e_x7 and p_x < (e_x7+enemy_size)):   if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):     end()   if (e_x8 >= p_x and e_x8 < (p_x + player_size)) or (p_x >= e_x8 and p_x < (e_x8+enemy_size)):    if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):     end() if count > 20:  if (e_x9 >= p_x and e_x9 < (p_x + player_size)) or (p_x >= e_x9 and p_x < (e_x9+enemy_size)):    if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+enemy_size)):     end()  if (e_x10 >= p_x and e_x10 < (p_x + player_size)) or (p_x >= e_x10 and p_x < (e_x10+boss_size[0])):    if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+boss_size[1])):     end() if count > 22:  if (e_x11 >= p_x and e_x11 < (p_x + player_size)) or (p_x >= e_x11 and p_x < (e_x11+boss_size[0])):    if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+boss_size[1])):     end() if count > 24:  if (e_x12 >= p_x and e_x12 < (p_x + player_size)) or (p_x >= e_x12 and p_x < (e_x12+boss_size[0])):    if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y+boss_size[1])):     end()def end(): print(count) if count >= 25:  print('you made it to 25-lvl') sys.exit()def enemy_all(): enemy1(enemy_x1) enemy1(enemy_x2) enemy1(enemy_x3) enemy1(enemy_x4) enemy1(enemy_x5) if count > 10:  enemy1(enemy_x6) if count > 15:  enemy1(enemy_x7)  enemy1(enemy_x8) if count > 20:  enemy1(enemy_x9)  boss1() if count > 22:  boss2() if count > 24:  boss3()def walls(): rect(0,0,20,550,green) rect(530,0,20,550,green) detect()while True: for event in pygame.event.get():  if event.type == pygame.QUIT:   print(count)   sys.exit()  elif event.type == KEYDOWN and event.key == K_RIGHT:   player_x = player_x + 10  elif event.type == KEYDOWN and event.key == K_LEFT:   player_x = player_x - 10  elif event.type == KEYDOWN and event.key == K_d:   if key_on == '1':    player_x = player_x + 10  elif event.type == KEYDOWN and event.key == K_a:   player_x = player_x - 10  elif event.type == KEYDOWN and event.key == K_SPACE:   time.sleep(1)  if count > 5:   if count > 10:    block_sp = 0.0005   if count > 20:    blobk_sp = 0.0001 screen.fill((40,40,40)) enemy_y = enemy_y + pps if count > 10:  if pps < 2:   pps = pps + 0.5  if count > 15:   if pps < 3:    pps = pps + 0.5  if count > 20:   if pps < 4:    pps = pps + 0.5 if enemy_y > 500:  enemy_y = 0  if count < 25:   enemy_x1 = random.randint(19, 550)   enemy_x2 = random.randint(19, 550)   enemy_x3 = random.randint(19, 550)   enemy_x4 = random.randint(19, 550)   enemy_x5 = random.randint(19, 550)   enemy_x6 = random.randint(19, 550)   enemy_x7 = random.randint(19, 550)   enemy_x8 = random.randint(19, 550)   enemy_x9 = random.randint(19, 550)   enemy_x10 = random.randint(19, 550)   enemy_x11 = random.randint(19, 550)   enemy_x12 = random.randint(19, 550)  count = count + 1  if count > 25:   enemy_x1 = random.randint(20, 550)   enemy_x2 = random.randint(20, 550)   enemy_x3 = random.randint(20, 550)   enemy_x4 = random.randint(20, 550)   enemy_x5 = random.randint(20, 550)   enemy_x6 = random.randint(20, 550)   enemy_x7 = random.randint(20, 550)   enemy_x8 = random.randint(20, 550)   enemy_x9 = random.randint(20, 550)   enemy_x10 = player_x   enemy_x11 = player_x   enemy_x12 = player_x player() enemy_all() detect() walls() if count < 5:  rect(40,475,115,50,red)  text('block drop',100,500,20) pygame.display.update()